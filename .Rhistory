mutate(norm = desc) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
xml_find_all(doc, ".//Pruefschritte")
xml_find_all(doc, ".//Thermoelemente")
xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
thermo_name
code <- xml_attr(thermoelement, "Code")
code
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
df_thermo <- data.frame(thermo_name, code)
?match
thermo_name %in% df_lpm
thermo_name %in% df_lpm$description
df_lpm %in% thermo_name
df_lpm$description %in% thermo_name
print(string)
for (string in enumerate(thermo_name)) {
print(string)
}
seq(length(thermo_name)
)
for (i in seq(length(thermo_name))) {
print(i)
}
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
df_thermo <- data.frame(thermo_name, code)
for (i in seq(length(thermo_name))) {
mutate(df, description = str_replace(description, thermo_name[i], code[i]))
}
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
df_thermo <- data.frame(thermo_name, code)
for (i in seq(length(thermo_name))) {
df %>%
mutate(description = str_replace(description, thermo_name[i], code[i]))
}
thermo_name[i]
code[i]
df$description
df_lpm %>%
mutate(description = str_replace(description, thermo_name[i], code[i]))
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
df_thermo <- data.frame(thermo_name, code)
for (i in seq(length(thermo_name))) {
df_lpm <- df_lpm %>%
mutate(description = str_replace(description, thermo_name[i], code[i]))
}
View(df_lpm)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = desc) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
df_thermo <- data.frame(thermo_name, code)
for (i in seq(length(thermo_name))) {
df_lpm <- df_lpm %>%
mutate(description = str_replace(
description,
thermo_name[i],
paste0("T_", code[i])
))
}
View(df_lpm)
sessionInfo()
?spread
?pivot_wider
View(df_lpm)
df_lpm %>%
pivot_wider(names_from = description, values_from = values)
df_lpm %>%
pivot_wider(names_from = description, names_glue = "{description}_{.norm}", values_from = values)
df_lpm %>%
pivot_wider(names_from = description, names_glue = "{description}_{norm}", values_from = values)
pivot_wider(names_from = description, names_sep = ".", values_from = c(norm, values)
df_lpm %>%
df_lpm %>%
pivot_wider(names_from = c(norm, description), values_from = values)
View(df_lpm)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = desc) %>%
bind_rows(df_lpm, .) %>%
str_replace(norm, "Norm", "U")
}
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
# renaming thermo elements
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
for (i in seq(length(thermo_name))) {
df_lpm <- df_lpm %>%
mutate(description = str_replace(
description,
thermo_name[i],
paste0("T_", code[i])
))
}
df_lpm %>%
pivot_wider(names_from = c(norm, description), values_from = values)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
# renaming thermo elements
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
for (i in seq(length(thermo_name))) {
df_lpm <- df_lpm %>%
mutate(description = str_replace(
description,
thermo_name[i],
paste0("T_", code[i])
))
}
df_lpm %>%
pivot_wider(names_from = c(norm, description), values_from = values)
View(df_lpm)
View(df_lpm)
dfwide <- df_lpm %>%
pivot_wider(names_from = c(norm, description), values_from = values)
View(dfwide)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
luminaire_str <- xml_find_all(doc, ".//Leuchtendaten") %>%
xml_attr("Time")
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
luminaire_data <- xml_find_all(doc, ".//Leuchtendaten")
luminaire_str <- xml_attr(luminaire_data, "Leuchtenart")
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
luminaire_str <- xml_attr(luminaire_data)
luminaire_str <- xml_attrs(luminaire_data)
View(luminaire_str)
luminaire_str[]
test <- luminaire_str[]
test
test[1]
luminaire_str[[1]]
luminaire_str[[1]][1]
luminaire_str[][1]
luminaire_str[1][1]
luminaire_str[[]][1]
luminaire_str[[1]][1]
luminaire_str[[1]]$Leuchtenart
test <. data.frame(luminaire_str)
test <- data.frame(luminaire_str)
View(test)
t(test)
test <- t(test)
View(test)
str(test)
data.frame(test)
test1 <- data.frame(test)
View(test1)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Leuchtendaten
luminaire_data <- xml_find_all(doc, ".//Leuchtendaten")
luminaire_str <- xml_attr(luminaire_data, "Leuchtenart")
luminaire_str <- xml_attrs(luminaire_data)
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- mutate(df_lpm, datetime = datetime_str)
t(luminaire_str)
t(luminaire_str[])
data.frame(luminaire_str)
t(data.frame(luminaire_str))
df_luminaire <- xml_attrs(luminaire_data) %>%
data.frame() %>%
t()
View(df_luminaire)
df_luminaire <- xml_attrs(luminaire_data) %>%
data.frame() %>%
t() %>%
remove_rownames()
has_rownames(df_luminaire)
df_luminaire
str(df_luminaire)
df_luminaire$Leuchtenart
df_luminaire <- xml_attrs(luminaire_data) %>%
data.frame() %>%
t() %>%
data.frame() %>%
remove_rownames()
View(df_luminaire)
test <- xml_attrs(luminaire_data)
t(test)
data.frame(t(test))
test
data.frame(t(test)[])
View(df_luminaire)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Leuchtendaten
luminaire_data <- xml_find_all(doc, ".//Leuchtendaten")
df_luminaire <- xml_attrs(luminaire_data) %>%
data.frame() %>%
t() %>%
data.frame() %>%
remove_rownames()
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- df_lpm %>%
mutate(
datetime = datetime_str,
luminaire = df_luminaire$Leuchtenart,
mounting = df_luminaire$Montageart,
SK = df_luminaire$Schutzklasse,
IP = df_luminaire$IP.Schutzart
)
# renaming thermo elements
thermoelement <- xml_find_all(doc, ".//Thermoelemente") %>%
xml_children()
thermo_name <- xml_name(thermoelement)
code <- xml_attr(thermoelement, "Code")
for (i in seq(length(thermo_name))) {
df_lpm <- df_lpm %>%
mutate(description = str_replace(
description,
thermo_name[i],
paste0("T_", code[i])
))
}
dfwide <- df_lpm %>%
pivot_wider(names_from = c(norm, description), values_from = values)
df_wide <- df_lpm %>%
pivot_wider(names_from = c(norm, description), values_from = values)
df_wide
# Textblöcke Schutartprüfung, Bemerkungen, Verteiler extrahieren
test <- xml_find_all(doc, ".//Weitere_Daten")
xml_attrs(test)
# Textblöcke Schutartprüfung, Bemerkungen, Verteiler extrahieren
df_notes <- xml_find_all(doc, ".//Weitere_Daten") %>%
xml_attrs() %>%
data.frame() %>%
t() %>%
data.frame() %>%
remove_rownames()
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
lpm <- readr::read_file("1.lpm")
doc <- read_xml(lpm)
# Eindeutige Datumszeit aus der kalten Raumtemperaturmessung beziehen
datetime_str <- xml_find_all(doc, ".//Raumtemperatur_kalt") %>%
xml_attr("Time")
# Leuchtendaten extrahieren
df_luminaire <- xml_find_all(doc, ".//Leuchtendaten") %>%
xml_attrs() %>%
data.frame() %>%
t() %>%
data.frame() %>%
remove_rownames()
# Textblöcke Schutartprüfung, Bemerkungen, Verteiler extrahieren
df_notes <- xml_find_all(doc, ".//Weitere_Daten") %>%
xml_attrs() %>%
data.frame() %>%
t() %>%
data.frame() %>%
remove_rownames()
# Namespace der einzelnen Prüfschritte extrahieren
norm_desc <- xml_find_all(doc, ".//Pruefschritte") %>%
xml_children() %>%
xml_name()
# Mit den einzelnen Prüfschritte die einzelnen Messergebnisse extrahieren
df_lpm <- data.frame(description = character())
for (desc in norm_desc) {
measurements <- paste0(".//", desc, "/Messergebnisse") %>%
xml_find_all(doc, .) %>%
xml_children() %>%
xml_children()
description <- xml_name(measurements)
values <- xml_attr(measurements, "Value")
df_lpm <- data.frame(description, values) %>%
mutate(norm = str_replace(desc, "Norm", "U")) %>%
bind_rows(df_lpm, .)
}
df_lpm <- df_lpm %>%
mutate(
datetime = datetime_str,
luminaire = df_luminaire$Leuchtenart,
mounting = df_luminaire$Montageart,
SK = df_luminaire$Schutzklasse,
IP = df_luminaire$IP.Schutzart
)
library(xlsx)
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
library(xlsx)
wb <- createWorkbook()
rm(list=ls(all = TRUE))
cat("\014")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xml2)
library(openxlsx)
